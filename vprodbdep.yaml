apiVersion: apps/v1
kind: Deployment
metadata:
  name: vprodb
  labels:
    app: vprodb
spec:
  selector:
    matchLabels:
      app: vprodb
  replicas: 1
  template:
    metadata:
      labels:
        app: vprodb
    spec:
      containers:
      - name: vprodb
        image: haimmanos/vprofiledb:latest
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: vpro-db-data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - name: vprodb-port
          containerPort: 3306
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secret
              key: db-pass
      nodeSelector:
        zone: us-east-1a
      volumes:
      - name: vpro-db-data
        awsElasticBlockStore:
          volumeID: vol-0a0959cde3882f55f
          fsType: ext4
      initContainers:
      - name: busybox
        image: busybox:latest
        securityContext:
          runAsUser: 0 # Ensures the init container runs as root
        args:
        - sh
        - -c
        - |
          echo "Checking directory permissions...";
          ls -ld /var/lib/mysql;

          # Test if we can create a file in the directory
          touch /var/lib/mysql/testfile || echo "Failed to create test file in /var/lib/mysql";

          # If the directory exists, attempt to delete its contents
          if [ -d /var/lib/mysql ]; then
            echo "Directory exists, attempting to delete files...";
            rm -rf /var/lib/mysql/* || echo "Failed to delete contents of /var/lib/mysql";
          else
            echo "Directory /var/lib/mysql does not exist, skipping deletion";
          fi

          # Check if the directory is empty after deletion
          ls -la /var/lib/mysql;
        volumeMounts:
        - name: vpro-db-data
          mountPath: /var/lib/mysql
